table.post-list tbody td {
  text-align: right;
  white-space: nowrap;
  padding-right: 1ch;
  vertical-align: top;
  line-height: 1.5;
}

table.post-list tbody td.ls-filename {
  text-align: left;
  white-space: normal;
}

/*
 * Show some extra space between the table row for the RSS feed and the table
 * rows for the actual blog posts. However, we only apply the padding to the
 * final column, to prevent unwanted internal spacing when the row wraps on
 * narrow screens.
 */
table.post-list tbody tr.feed-entry td.ls-filename {
  padding-bottom: 0.5lh;
}

@media (max-width: 768px) {
  /*
   * On narrow screens, the table rows needs to be able to wrap. See below to
   * understand why we need to explicitly set the font size.
   */
  table.post-list tbody td {
    display: inline-block;
    font-size: var(--font-size-base);
  }

  /*
   * Firefox implicitly adds a whitespace between the table cells when they're
   * `display: inline-block`, but Chrome does not. This messes up the layout.
   */
  table.post-list tbody tr {
    font-size: 0;
  }

  /*
   * Make sure the "filename" gets its own line, to improve legibility.
   */
  table.post-list tbody td.ls-filename {
    width: 100%;
  }

  /*
   * Add a bit more space between the rows, to improve legibility on narrow
   * screens.
   */
  table.post-list tbody tr td.ls-filename {
    padding-bottom: 0.5lh;
  }
}

.post-body {
  text-align: justify;
  border: 1px solid var(--color-fg);
  padding: 1.5rem;
}

/*
 * Justified text looks bad on narrow screens and the left/right borders take
 * up too much horizontal space.
 */
@media (max-width: 640px) {
  .post-body {
    text-align: left;
    border: none;
    border-top: 1px solid var(--color-fg);
    padding: 0;
    padding-top: 1lh;
  }
}

/*
 * We're making the assumption that posts will end with a <p></p>. This isn't
 * necessarily true, but it's difficult to do this any other way.
 */

.post-content > p:first-of-type {
  margin-top: 0;
}

.post-content > p:last-of-type {
  margin-bottom: 0;
}

.post-body .post-content > p:last-of-type::after {
  content: " â–ˆ";
  animation: blink 1s step-start infinite;
}

@media (prefers-reduced-motion) {
  .post-body .post-content > p:last-of-type::after {
    animation: none;
  }
}

/* "eob" means "end of buffer" */

.post-decoration .vim-eob {
  font-weight: bold;
  color: var(--color-bright-blue);
}

.post-decoration .vim-statusline {
  overflow: hidden;
  white-space: nowrap;
  line-height: 1.5;
  display: flex;
  justify-content: space-between;
  color: var(--color-fg);
  background-color: var(--color-bright-black);
}

.post-decoration .vim-statusline span {
  display: inline-block;
}

@media (max-width: 640px) {
  .post-decoration .vim-statusline .vim-word-count {
    display: none;
  }
}

@keyframes blink {
  50% {
    opacity: 0;
  }
}

footer.post-footer {
  display: flex;
  gap: 3rem;
  align-items: center;
  justify-content: space-between;
}

footer.post-footer .back-link {
  white-space: nowrap;
}

ul.tag-list {
  display: flex;
  flex-wrap: wrap;
  column-gap: var(--flow-list-column-gap);
  row-gap: var(--flow-list-row-gap);
  padding-left: 0;
  list-style: none;
}

footer.post-footer ul.tag-list {
  justify-content: right;
}

ul.tag-list li {
  display: inline;
}

ul.tag-list .current-tag {
  /*
   * We use `position: relative` here so we can use `position: absolute` in the
   * ::before and ::after pseudo-elements.
   */
  position: relative;
  color: var(--color-bright-cyan);
}

/*
 * Using `display: inline-block` prevents the text decoration from applying to
 * the ::before and ::after pseudo-elements.
 *
 * We use `position: absolute` so that the brackets we add around the currently
 * selected tag don't shift the layout. It's frustrating for users when
 * clicking a button/link shifts the layout of the buttons on the page.
 */

ul.tag-list .current-tag::before {
  content: "[";
  position: absolute;
  display: inline-block;

  /*
   * Otherwise, the opening bracket will overlap the first character of the
   * tag.
   */
  left: -1ch;
}

ul.tag-list .current-tag::after {
  content: "]";
  position: absolute;
  display: inline-block;
}

ul.tag-list .all-link::before {
  content: "(";
  display: inline-block;
}

ul.tag-list .all-link::after {
  content: ")";
  display: inline-block;
}

.comments {
  margin-top: 3rem;
}
